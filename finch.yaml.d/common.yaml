images:
  - location: "<finch_image_location>"
    arch: "<finch_image_arch>"
    digest: "<finch_image_digest>"

containerd:
  system: true
  user: false
  # Override containerd archive
  # ðŸŸ¢ Builtin default: hard-coded URL with hard-coded digest (see the output of `limactl info | jq .defaultTemplate.containerd.archives`)
  archives:
  - location: "https://deps.runfinch.com/x86-64/nerdctl-full-1.7.7-linux-amd64.tar.gz"
    arch: "x86_64"
    digest: "sha256:a731eac93e8e9dda1a0d76dc1606438deb0668ea7d6bd5c5af436353ed9f65c5"
  - location: "https://deps.runfinch.com/aarch64/nerdctl-full-1.7.7-linux-arm64.tar.gz"
    arch: "aarch64"
    digest: "sha256:b161a20c0e41f9ad999e8411e23c58ece4b3e584ae90b4252b76a39eee4a0c31"

provision:
  - mode: system
    script: |
      modprobe br_netfilter
      cat <<EOF > /etc/sysctl.d/99-finch.conf
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
      EOF
      sysctl --system
  - mode: user
    script: |
      #!/bin/bash

      # Enable SSHing into the VM as root (e.g., in `nerdctlConfigApplier.Apply`).
      sudo cp ~/.ssh/authorized_keys /root/.ssh/
      sudo chown $USER /mnt/lima-finch

      # This block of configuration facilitates the startup of rootless containers created prior to this change within the rootful vm configuration by mounting /mnt/lima-finch to both rootless and rootful dataroots.   

      # https://github.com/containerd/containerd/blob/main/docs/ops.md#base-configuration
      sudo mkdir -p /mnt/lima-finch/containerd /var/lib/containerd
      sudo mount --bind /mnt/lima-finch/containerd /var/lib/containerd

      # https://github.com/containerd/nerdctl/blob/cffdf87ff4d648a5344eea1406bb95ca3ad7eaa4/extras/rootless/containerd-rootless.sh#L144-L146
      # XDG_DATA_HOME & ~/.local/share: https://github.com/containerd/nerdctl/blob/cffdf87ff4d648a5344eea1406bb95ca3ad7eaa4/extras/rootless/containerd-rootless.sh#L51
      mkdir -p ~/.local/share/containerd
      sudo mount --bind /mnt/lima-finch/containerd ~/.local/share/containerd

      # https://github.com/containerd/nerdctl/blob/main/docs/dir.md#dataroot
      sudo mkdir -p /mnt/lima-finch/nerdctl /var/lib/nerdctl
      sudo mount --bind /mnt/lima-finch/nerdctl /var/lib/nerdctl
      mkdir -p ~/.local/share/nerdctl
      sudo mount --bind /mnt/lima-finch/nerdctl ~/.local/share/nerdctl

      # https://github.com/containerd/nerdctl/blob/main/docs/dir.md#netconfpath
      sudo mkdir -p /mnt/lima-finch/cni-config /etc/cni/
      sudo mount --bind /mnt/lima-finch/cni-config /etc/cni/
      mkdir -p ~/.config/cni
      sudo mount --bind /mnt/lima-finch/cni-config ~/.config/cni

      # https://github.com/containerd/nerdctl/blob/cffdf87ff4d648a5344eea1406bb95ca3ad7eaa4/extras/rootless/containerd-rootless.sh#L148-L150
      sudo mkdir -p /mnt/lima-finch/cni /var/lib/cni
      sudo mount --bind /mnt/lima-finch/cni /var/lib/cni
      mkdir -p  ~/.local/share/cni
      sudo mount --bind /mnt/lima-finch/cni  ~/.local/share/cni

      # https://github.com/containerd/stargz-snapshotter/blob/94b12086ace4119e86d2db0d6343d7c734b56671/cmd/containerd-stargz-grpc/main.go#L67C2-L67C2
      sudo mkdir -p /mnt/lima-finch/containerd-stargz-grpc/snapshotter/snapshots
      sudo mount --bind /mnt/lima-finch/containerd-stargz-grpc /var/lib/containerd-stargz-grpc

      # https://github.com/awslabs/soci-snapshotter/blob/335515f746f50c964ed48159257e1aeba04805b6/cmd/soci-snapshotter-grpc/main.go#L84
      sudo mkdir -p /mnt/lima-finch/soci-snapshotter-grpc/snapshotter/snapshots /var/lib/soci-snapshotter-grpc
      sudo mount --bind /mnt/lima-finch/soci-snapshotter-grpc /var/lib/soci-snapshotter-grpc

      # Make sure stargz and buildkit are restarted with containerd
      sudo mkdir -p /usr/local/lib/systemd/system/buildkit.service.d/
      printf '[Unit]\nPartOf=containerd.service\n' | sudo tee /usr/local/lib/systemd/system/buildkit.service.d/finch.conf
      sudo mkdir -p /usr/local/lib/systemd/system/stargz-snapshotter.service.d/
      printf '[Unit]\nPartOf=containerd.service\n\n[Service]\nKillSignal=SIGTERM\n' | sudo tee /usr/local/lib/systemd/system/stargz-snapshotter.service.d/finch.conf

      # Add a new services that syncs the filesystem before shutdown
      printf '[Unit]\nDescription=Sync containerd on shutdown\nDefaultDependencies=no\nBefore=shutdown.target reboot.target halt.target kexec.target\n\n[Service]\nType=oneshot\nExecStart=/bin/bash -c "sync /var/lib/containerd"\n\n[Install]\nWantedBy=halt.target reboot.target shutdown.target kexec.target\n' | sudo tee /usr/local/lib/systemd/system/finch-sync-on-shutdown.service
      sudo systemctl enable --now finch-sync-on-shutdown.service

      # Add a new service that cleans up lingering CNI networks on boot
      printf '[Unit]\nDescription=Delete hanging data on boot\nDefaultDependencies=no\nBefore=basic.target\n\n[Service]\nType=oneshot\nExecStart=/bin/bash -c "sudo rm -rf /var/lib/cni/networks/bridge/**; sudo rm -rf /var/lib/cni/results/bridge-finch-*"\n\n[Install]\nWantedBy=basic.target\n' | sudo tee /usr/local/lib/systemd/system/finch-cleanup-on-boot.service
      sudo systemctl enable --now finch-cleanup-on-boot.service

      # Set a default ulimit for number of files in containerd
      sudo mkdir -p /usr/local/lib/systemd/system/containerd.service.d/
      printf '[Service]\nLimitNOFILE=1048576\n' | sudo tee /usr/local/lib/systemd/system/containerd.service.d/finch.conf

      sudo systemctl daemon-reload

      sudo systemctl restart containerd.service
env:
  # Containerd namespace is used by the lima cidata script
  # 40-install-containerd.sh. Specifically this variable is defining the
  # Buildkit Workers Containerd namespace.
  CONTAINERD_NAMESPACE: finch
