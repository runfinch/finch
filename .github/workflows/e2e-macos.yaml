name: e2e-macos
on:
  workflow_call:
    inputs:
      arch:
        type: string
        required: true
      version:
        type: string
        required: true
      runner-type:
        type: string
        required: true
      test-command:
        type: string
        required: true

permissions:
  # This is required for configure-aws-credentials to request an OIDC JWT ID token to access AWS resources later on.
  # More info: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#adding-permissions-settings
  id-token: write
  # This is required for actions/checkout
  contents: read

jobs:
  test:
    runs-on:
      [
        "self-hosted",
        "macos",
        "${{ inputs.arch }}",
        "${{ inputs.version }}",
        "${{ inputs.runner-type }}",
      ]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We need to get all the git tags to make version injection work. See VERSION in Makefile for more detail.
          fetch-depth: 0
          persist-credentials: false
          submodules: recursive
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: go.mod
          cache: false
      - name: Set output variables
        id: vars
        run: |
          has_creds=${{ (github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name) && github.actor != 'dependabot[bot]' }}
          echo "has_creds=$has_creds" >> $GITHUB_OUTPUT
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        if: ${{ steps.vars.outputs.has_creds == 'true' }}
        with:
          role-to-assume: ${{ secrets.ROLE }}
          role-session-name: credhelper-test
          aws-region: ${{ secrets.REGION }}
      - name: Echo GitHub context, and os information
        run: |  
          echo "left side: steps.vars.outputs.has_creds: ${{ steps.vars.outputs.has_creds }} " 
          echo "guess: steps.vars.outputs.has_creds == true: ${{ steps.vars.outputs.has_creds == true}}"
          echo "guess: steps.vars.outputs.has_creds == 'true': ${{ steps.vars.outputs.has_creds == 'true'}}"           
      - name: Clean up previous files
        run: |
          sudo rm -rf /opt/finch
          sudo rm -rf ~/.finch
          sudo rm -rf ./_output
          if pgrep '^qemu-system'; then
            sudo pkill '^qemu-system'
          fi
          if pgrep '^socket_vmnet'; then
            sudo pkill '^socket_vmnet'
          fi        
      - name: Install Rosetta 2
        run: echo "A" | softwareupdate --install-rosetta || true
      - run: brew install lz4 automake autoconf libtool yq
        shell: zsh {0}
      - name: Build project
        run: |
          export PATH="/opt/homebrew/opt/libtool/libexec/gnubin:$PATH"
          make
        shell: zsh {0}
      - name: Run e2e tests
        run: |
          git status
          git clean -f -d
          REGISTRY=${{ steps.vars.outputs.has_creds == true && env.REGISTRY || '' }} make ${{ inputs.test-command }}
        shell: zsh {0}
      - name: Check and upload e2e tests reports to s3 bucket
        run: |
          VM_REPORT="${{ github.workspace }}/reports/${{ github.run_id }}-${{ github.run_attempt }}-e2e-vm-report.json"
          CONTAINER_REPORT="${{ github.workspace }}/reports/${{ github.run_id }}-${{ github.run_attempt }}-e2e-container-report.json"
          
          if [ -f "$VM_REPORT" ]; then
            echo "VM report file exists. Uploading to S3..."
            aws s3 cp "$VM_REPORT" "s3://finch-e2e-test-log-reports/${{ inputs.os }}-${{ inputs.arch }}/${{ github.run_id }}-${{ github.run_attempt }}-e2e-vm-report.json"
            echo "VM report uploaded successfully."
          else
            echo "VM report file does not exist. Skipping upload."
          fi
          
          if [ -f "$CONTAINER_REPORT" ]; then
            echo "Container report file exists. Uploading to S3..."
            aws s3 cp "$CONTAINER_REPORT" "s3://finch-e2e-test-log-reports/${{ inputs.os }}-${{ inputs.arch }}/${{ github.run_id }}-${{ github.run_attempt }}-e2e-container-report.json"
            echo "Container report uploaded successfully."
          else
            echo "Container report file does not exist. Skipping upload."
          fi