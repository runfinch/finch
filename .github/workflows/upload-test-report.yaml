name: upload-test-report
on:
  workflow_call:
    inputs:
      os:
        type: string
        required: true
      arch:
        type: string
        required: true
      version:
        type: string
        required: true
      test-command:
        type: string
        required: true
      has-creds:
        type: string
        required: true
      vm_report:
        type: string
        required: true
      container_report:
        type: string
        required: true
      vm_serial_report:
        type: string
        required: true

permissions:
  # This is required for configure-aws-credentials to request an OIDC JWT ID token to access AWS resources later on.
  # More info: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#adding-permissions-settings
  id-token: write
  # This is required for actions/checkout
  contents: read

jobs:
 upload-e2e-test-report:
    if: always()
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Set output variables to check AL2
        id: linux2
        run: |
          is_al2=${{ (startsWith(inputs.os, 'amazon') && inputs.version == '2' ) }}
          echo "is_al2=$is_al2" >> $GITHUB_OUTPUT
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        if: |
            steps.linux2.outputs.is_al2 == 'false'
            && inputs.has-creds == 'true'
            && github.event_name == 'pull_request'
            && github.event.action == 'closed'
            && github.event.pull_request.merged == true
        with:
          role-to-assume: ${{ secrets.ROLE }}
          role-session-name: credhelper-test
          aws-region: ${{ secrets.REGION }}
      - name: download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.1.08
        if: |
            steps.linux2.outputs.is_al2 == 'false'
            && inputs.has-creds == 'true'
            && github.event_name == 'pull_request'
            && github.event.action == 'closed'
            && github.event.pull_request.merged == true
        with:
          name: ${{ inputs.os }}-${{ inputs.version }}-${{ inputs.test-command }}-${{ inputs.arch }}-${{ github.run_id }}-${{ github.run_attempt }}-e2e-reports
          path: ${{ inputs.os }}-${{ inputs.version }}-${{ inputs.test-command }}-${{ inputs.arch }}-${{ github.run_id }}-${{ github.run_attempt }}-e2e-reports
      - name: Display structure of downloaded files
        if: |
            steps.linux2.outputs.is_al2 == 'false'
            && inputs.has-creds == 'true'
            && github.event_name == 'pull_request'
            && github.event.action == 'closed'
            && github.event.pull_request.merged == true
        run: ls -R ${{ inputs.os }}-${{ inputs.version }}-${{ inputs.test-command }}-${{ inputs.arch }}-${{ github.run_id }}-${{ github.run_attempt }}-e2e-reports
      - name: Check and upload e2e tests reports to s3 bucket
        if: |
            steps.linux2.outputs.is_al2 == 'false'
            && inputs.has-creds == 'true'
            && github.event_name == 'pull_request'
            && github.event.action == 'closed'
            && github.event.pull_request.merged == true

        run: |
          VM_REPORT="${{ github.workspace }}/${{ inputs.os }}-${{ inputs.version }}-${{ inputs.test-command }}-${{ inputs.arch }}-${{ github.run_id }}-${{ github.run_attempt }}-e2e-reports/${{ github.run_id }}-${{ github.run_attempt }}-e2e-vm-report.json"
          CONTAINER_REPORT="${{ github.workspace }}/${{ inputs.os }}-${{ inputs.version }}-${{ inputs.test-command }}-${{ inputs.arch }}-${{ github.run_id }}-${{ github.run_attempt }}-e2e-reports/${{ github.run_id }}-${{ github.run_attempt }}-e2e-container-report.json"
          VM_SERIAL_REPORT="${{ github.workspace }}/${{ inputs.os }}-${{ inputs.version }}-${{ inputs.test-command }}-${{ inputs.arch }}-${{ github.run_id }}-${{ github.run_attempt }}-e2e-reports/${{ github.run_id }}-${{ github.run_attempt }}-e2e-vm-serial-report.json"

          if [ -f "$VM_REPORT" ]; then
            echo "VM report file exists. Uploading to S3..."
            aws s3 cp "$VM_REPORT" "s3://finch-e2e-test-log-reports/${{ inputs.os }}-${{ inputs.arch }}/${{ inputs.vm_report }}"
            echo "VM report uploaded successfully."
          else
            echo "VM report file does not exist. Skipping upload."
          fi

          if [ -f "$CONTAINER_REPORT" ]; then
            echo "Container report file exists. Uploading to S3..."
            aws s3 cp "$CONTAINER_REPORT" "s3://finch-e2e-test-log-reports/${{ inputs.os }}-${{ inputs.arch }}/${{ inputs.container_report }}"
            echo "Container report uploaded successfully."
          else
            echo "Container report file does not exist. Skipping upload."
          fi

          if [ -f "$VM_SERIAL_REPORT" ]; then
            echo "VM serial report file exists. Uploading to S3..."
            aws s3 cp "$VM_SERIAL_REPORT" "s3://finch-e2e-test-log-reports/${{ inputs.os }}-${{ inputs.arch }}/${{ inputs.vm_serial_report }}"
            echo "VM serial report uploaded successfully."
          else
            echo "VM serial report file does not exist. Skipping upload."
          fi
