// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/support/support.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// BundleBuilder is a mock of BundleBuilder interface.
type BundleBuilder struct {
	ctrl     *gomock.Controller
	recorder *BundleBuilderMockRecorder
}

// BundleBuilderMockRecorder is the mock recorder for BundleBuilder.
type BundleBuilderMockRecorder struct {
	mock *BundleBuilder
}

// NewBundleBuilder creates a new mock instance.
func NewBundleBuilder(ctrl *gomock.Controller) *BundleBuilder {
	mock := &BundleBuilder{ctrl: ctrl}
	mock.recorder = &BundleBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *BundleBuilder) EXPECT() *BundleBuilderMockRecorder {
	return m.recorder
}

// GenerateSupportBundle mocks base method.
func (m *BundleBuilder) GenerateSupportBundle(arg0, arg1 []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSupportBundle", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateSupportBundle indicates an expected call of GenerateSupportBundle.
func (mr *BundleBuilderMockRecorder) GenerateSupportBundle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSupportBundle", reflect.TypeOf((*BundleBuilder)(nil).GenerateSupportBundle), arg0, arg1)
}
